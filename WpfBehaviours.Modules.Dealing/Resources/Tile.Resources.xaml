<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachedProps="clr-namespace:WpfBehaviours.Infrastructure.AttachedProps;assembly=WpfBehaviours.Infrastructure"
                    xmlns:controls="clr-namespace:WpfBehaviours.Modules.Dealing.Controls"
                    xmlns:converters="clr-namespace:WpfBehaviours.Infrastructure.Converters;assembly=WpfBehaviours.Infrastructure"
                    xmlns:utils="clr-namespace:WpfBehaviours.Modules.Dealing.Utils"
                    xmlns:viewModels="clr-namespace:WpfBehaviours.Modules.Dealing.ViewModels">



    <Style x:Key="SegmentedProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="LayoutRoot">
                        <!--  attach the view model  -->
                        <controls:CircularProgressBarViewModel.Attach>
                            <controls:SegmentedProgressBarViewModel HoleSizeFactor="0.7" SegmentCount="{x:Static utils:Globals.ProgressSegments}" />
                        </controls:CircularProgressBarViewModel.Attach>

                        <!--  render the segments  -->
                        <ItemsControl ItemsSource="{Binding Segments}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <!--  a grey segment  -->
                                        <controls:PiePiece CentreX="{Binding Parent.CentreX}"
                                                           CentreY="{Binding Parent.CentreY}"
                                                           Fill="LightGray"
                                                           InnerRadius="{Binding Parent.InnerRadius}"
                                                           Opacity="0.5"
                                                           Radius="{Binding Parent.Radius}"
                                                           RotationAngle="{Binding StartAngle}"
                                                           Stroke="White"
                                                           WedgeAngle="{Binding WedgeAngle}" />
                                        <!--  a blue segment, with an Opacity bound to the view model  -->
                                        <controls:PiePiece CentreX="{Binding Parent.CentreX}"
                                                           CentreY="{Binding Parent.CentreY}"
                                                           Fill="{DynamicResource AccentBrush}"
                                                           InnerRadius="{Binding Parent.InnerRadius}"
                                                           Opacity="{Binding Opacity}"
                                                           Radius="{Binding Parent.Radius}"
                                                           RotationAngle="{Binding StartAngle}"
                                                           Stroke="White"
                                                           WedgeAngle="{Binding WedgeAngle}" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <DataTemplate DataType="{x:Type viewModels:RateViewModel}">
        <StackPanel Orientation="Horizontal">
            <Label x:Name="RatePart1"
                   VerticalAlignment="Center"
                   Content="{Binding Part1}"
                   FontSize="20"
                   FontWeight="Bold"
                   Foreground="Black"
                   Visibility="Visible" />
            <Label x:Name="RatePart2"
                   VerticalAlignment="Center"
                   Content="{Binding Part2}"
                   FontSize="40"
                   FontWeight="Bold"
                   Foreground="Red"
                   Visibility="Visible" />
            <Label x:Name="RatePart3"
                   VerticalAlignment="Center"
                   Content="{Binding Part3}"
                   FontSize="25"
                   FontWeight="Bold"
                   Foreground="Blue"
                   Visibility="Visible" />
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                <Setter TargetName="RatePart1" Property="Foreground" Value="{DynamicResource StandardDisabledBrush}" />
                <Setter TargetName="RatePart2" Property="Foreground" Value="{DynamicResource StandardDisabledBrush}" />
                <Setter TargetName="RatePart3" Property="Foreground" Value="{DynamicResource StandardDisabledBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate DataType="{x:Type viewModels:SpotTileViewModel}">
        <Border Background="White"
                BorderBrush="{DynamicResource AccentBrush}"
                BorderThickness="2,2,2,2"
                IsHitTestVisible="True">

            <Grid attachedProps:GridUtils.ColumnDefinitions="*"
                  attachedProps:GridUtils.RowDefinitions="Auto,Auto,Auto,*,Auto"
                  Background="White">


                <Grid HorizontalAlignment="Stretch" Background="{DynamicResource AccentBrush}">
                    <Label Margin="2,0,0,0"
                           VerticalAlignment="Center"
                           VerticalContentAlignment="Center"
                           Content="Spot Tile"
                           Foreground="White" />
                    <Button Margin="0,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Command="{Binding CloseViewCommand}"
                            Style="{DynamicResource toolbarButtonStyle}"
                            ToolTip="Close">
                        <Viewbox Width="40" Height="40">
                            <Grid>
                                <Grid Width="128" Height="128">
                                    <Rectangle Margin="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Background}" />
                                </Grid>
                                <Path Width="26"
                                      Height="26"
                                      Data="F1M54.0573,47.8776L38.1771,31.9974 54.0547,16.1198C55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531L32.0026,25.8229 16.1224,9.94531C14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198L25.8255,32 9.94794,47.8776C8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534L32.0026,38.1745 47.8802,54.0534C49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776z"
                                      Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}},
                                                     Path=Foreground}"
                                      Stretch="Uniform" />
                            </Grid>
                        </Viewbox>
                    </Button>
                </Grid>

                <StackPanel Grid.Row="1" Orientation="Horizontal">

                    <ComboBox Width="80"
                              Margin="2"
                              HorizontalAlignment="Center"
                              IsEnabled="{Binding IsEnabled}"
                              ItemsSource="{Binding FakeSpotPairs}"
                              SelectedItem="{Binding FakeSpotPair}" />
                    <DatePicker Width="100"
                                Margin="2"
                                IsEnabled="{Binding IsEnabled}"
                                SelectedDate="{Binding SelectedDate}" />
                </StackPanel>


                <Grid Grid.Row="2"
                      attachedProps:GridUtils.ColumnDefinitions="*,*"
                      attachedProps:GridUtils.RowDefinitions="Auto"
                      Background="White">


                    <ContentControl Margin="2,0,0,0"
                                    Content="{Binding RateViewModel}"
                                    IsEnabled="{Binding IsEnabled}" />

                    <StackPanel Grid.Row="0"
                                Grid.Column="1"
                                Orientation="Vertical"
                                Visibility="{Binding StartedTiming,
                                                     Converter={x:Static converters:BoolToVisibilityConverter.Instance},
                                                     ConverterParameter='True'}">

                        <ProgressBar Width="40"
                                     Height="40"
                                     Margin="5"
                                     Style="{StaticResource SegmentedProgressBarStyle}"
                                     Value="{Binding Progress}" />


                        <Label Margin="2"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Bottom"
                               Content="{Binding TimeOutRemaining}"
                               IsEnabled="{Binding IsEnabled}" />
                    </StackPanel>

                </Grid>

                <Button Grid.Row="4"
                        Margin="2"
                        Command="{Binding OkCommand}"
                        Content="Ok" />

            </Grid>
        </Border>


    </DataTemplate>


</ResourceDictionary>